#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBProtoLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CarBoyDBLive")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void UpdateMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void DeleteMBProto_sessionTbl(MBProto_sessionTbl instance);
    partial void InsertMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void UpdateMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void DeleteMBProto_user_sessionTbl(MBProto_user_sessionTbl instance);
    partial void InsertCustomerTbl(CustomerTbl instance);
    partial void UpdateCustomerTbl(CustomerTbl instance);
    partial void DeleteCustomerTbl(CustomerTbl instance);
    partial void InsertUserTbl(UserTbl instance);
    partial void UpdateUserTbl(UserTbl instance);
    partial void DeleteUserTbl(UserTbl instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::MBProtoLib.Properties.Settings.Default.CarBoyDBLiveConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MBProto_sessionTbl> MBProto_sessionTbls
		{
			get
			{
				return this.GetTable<MBProto_sessionTbl>();
			}
		}
		
		public System.Data.Linq.Table<MBProto_user_sessionTbl> MBProto_user_sessionTbls
		{
			get
			{
				return this.GetTable<MBProto_user_sessionTbl>();
			}
		}
		
		public System.Data.Linq.Table<CustomerTbl> CustomerTbls
		{
			get
			{
				return this.GetTable<CustomerTbl>();
			}
		}
		
		public System.Data.Linq.Table<UserTbl> UserTbls
		{
			get
			{
				return this.GetTable<UserTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBProto_sessionTbl")]
	public partial class MBProto_sessionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _customerID;
		
		private long _sessionID;
		
		private long _authKeyID;
		
		private string _diffKey;
		
		private string _messageIdCollection;
		
		private System.DateTime _regDate;
		
		private EntityRef<CustomerTbl> _CustomerTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OncustomerIDChanging(long value);
    partial void OncustomerIDChanged();
    partial void OnsessionIDChanging(long value);
    partial void OnsessionIDChanged();
    partial void OnauthKeyIDChanging(long value);
    partial void OnauthKeyIDChanged();
    partial void OndiffKeyChanging(string value);
    partial void OndiffKeyChanged();
    partial void OnmessageIdCollectionChanging(string value);
    partial void OnmessageIdCollectionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public MBProto_sessionTbl()
		{
			this._CustomerTbl = default(EntityRef<CustomerTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerID", DbType="BigInt NOT NULL")]
		public long customerID
		{
			get
			{
				return this._customerID;
			}
			set
			{
				if ((this._customerID != value))
				{
					if (this._CustomerTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIDChanging(value);
					this.SendPropertyChanging();
					this._customerID = value;
					this.SendPropertyChanged("customerID");
					this.OncustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionID", DbType="BigInt NOT NULL")]
		public long sessionID
		{
			get
			{
				return this._sessionID;
			}
			set
			{
				if ((this._sessionID != value))
				{
					this.OnsessionIDChanging(value);
					this.SendPropertyChanging();
					this._sessionID = value;
					this.SendPropertyChanged("sessionID");
					this.OnsessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authKeyID", DbType="BigInt NOT NULL")]
		public long authKeyID
		{
			get
			{
				return this._authKeyID;
			}
			set
			{
				if ((this._authKeyID != value))
				{
					this.OnauthKeyIDChanging(value);
					this.SendPropertyChanging();
					this._authKeyID = value;
					this.SendPropertyChanged("authKeyID");
					this.OnauthKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diffKey", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string diffKey
		{
			get
			{
				return this._diffKey;
			}
			set
			{
				if ((this._diffKey != value))
				{
					this.OndiffKeyChanging(value);
					this.SendPropertyChanging();
					this._diffKey = value;
					this.SendPropertyChanged("diffKey");
					this.OndiffKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageIdCollection", DbType="NVarChar(800) NOT NULL", CanBeNull=false)]
		public string messageIdCollection
		{
			get
			{
				return this._messageIdCollection;
			}
			set
			{
				if ((this._messageIdCollection != value))
				{
					this.OnmessageIdCollectionChanging(value);
					this.SendPropertyChanging();
					this._messageIdCollection = value;
					this.SendPropertyChanged("messageIdCollection");
					this.OnmessageIdCollectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_MBProto_sessionTbl", Storage="_CustomerTbl", ThisKey="customerID", OtherKey="ID", IsForeignKey=true)]
		public CustomerTbl CustomerTbl
		{
			get
			{
				return this._CustomerTbl.Entity;
			}
			set
			{
				CustomerTbl previousValue = this._CustomerTbl.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTbl.Entity = null;
						previousValue.MBProto_sessionTbls.Remove(this);
					}
					this._CustomerTbl.Entity = value;
					if ((value != null))
					{
						value.MBProto_sessionTbls.Add(this);
						this._customerID = value.ID;
					}
					else
					{
						this._customerID = default(long);
					}
					this.SendPropertyChanged("CustomerTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBProto_user_sessionTbl")]
	public partial class MBProto_user_sessionTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _userID;
		
		private long _sessionID;
		
		private long _authKeyID;
		
		private string _diffKey;
		
		private string _messageIdCollection;
		
		private System.DateTime _regDate;
		
		private EntityRef<UserTbl> _UserTbl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserIDChanging(long value);
    partial void OnuserIDChanged();
    partial void OnsessionIDChanging(long value);
    partial void OnsessionIDChanged();
    partial void OnauthKeyIDChanging(long value);
    partial void OnauthKeyIDChanged();
    partial void OndiffKeyChanging(string value);
    partial void OndiffKeyChanged();
    partial void OnmessageIdCollectionChanging(string value);
    partial void OnmessageIdCollectionChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    #endregion
		
		public MBProto_user_sessionTbl()
		{
			this._UserTbl = default(EntityRef<UserTbl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="BigInt NOT NULL")]
		public long userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					if (this._UserTbl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionID", DbType="BigInt NOT NULL")]
		public long sessionID
		{
			get
			{
				return this._sessionID;
			}
			set
			{
				if ((this._sessionID != value))
				{
					this.OnsessionIDChanging(value);
					this.SendPropertyChanging();
					this._sessionID = value;
					this.SendPropertyChanged("sessionID");
					this.OnsessionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authKeyID", DbType="BigInt NOT NULL")]
		public long authKeyID
		{
			get
			{
				return this._authKeyID;
			}
			set
			{
				if ((this._authKeyID != value))
				{
					this.OnauthKeyIDChanging(value);
					this.SendPropertyChanging();
					this._authKeyID = value;
					this.SendPropertyChanged("authKeyID");
					this.OnauthKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diffKey", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string diffKey
		{
			get
			{
				return this._diffKey;
			}
			set
			{
				if ((this._diffKey != value))
				{
					this.OndiffKeyChanging(value);
					this.SendPropertyChanging();
					this._diffKey = value;
					this.SendPropertyChanged("diffKey");
					this.OndiffKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageIdCollection", DbType="NVarChar(800) NOT NULL", CanBeNull=false)]
		public string messageIdCollection
		{
			get
			{
				return this._messageIdCollection;
			}
			set
			{
				if ((this._messageIdCollection != value))
				{
					this.OnmessageIdCollectionChanging(value);
					this.SendPropertyChanging();
					this._messageIdCollection = value;
					this.SendPropertyChanged("messageIdCollection");
					this.OnmessageIdCollectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_MBProto_user_sessionTbl", Storage="_UserTbl", ThisKey="userID", OtherKey="ID", IsForeignKey=true)]
		public UserTbl UserTbl
		{
			get
			{
				return this._UserTbl.Entity;
			}
			set
			{
				UserTbl previousValue = this._UserTbl.Entity;
				if (((previousValue != value) 
							|| (this._UserTbl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserTbl.Entity = null;
						previousValue.MBProto_user_sessionTbls.Remove(this);
					}
					this._UserTbl.Entity = value;
					if ((value != null))
					{
						value.MBProto_user_sessionTbls.Add(this);
						this._userID = value.ID;
					}
					else
					{
						this._userID = default(long);
					}
					this.SendPropertyChanged("UserTbl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerTbl")]
	public partial class CustomerTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _family;
		
		private string _mobile;
		
		private string _email;
		
		private string _password;
		
		private System.DateTime _lastLoginDate;
		
		private System.DateTime _regDate;
		
		private string _signCode;
		
		private System.Nullable<System.DateTime> _signCodeRegDate;
		
		private byte _status;
		
		private double _wallet;
		
		private string _code;
		
		private System.Nullable<byte> _signCodeRerty;
		
		private EntitySet<MBProto_sessionTbl> _MBProto_sessionTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnlastLoginDateChanging(System.DateTime value);
    partial void OnlastLoginDateChanged();
    partial void OnregDateChanging(System.DateTime value);
    partial void OnregDateChanged();
    partial void OnsignCodeChanging(string value);
    partial void OnsignCodeChanged();
    partial void OnsignCodeRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsignCodeRegDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnwalletChanging(double value);
    partial void OnwalletChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnsignCodeRertyChanging(System.Nullable<byte> value);
    partial void OnsignCodeRertyChanged();
    #endregion
		
		public CustomerTbl()
		{
			this._MBProto_sessionTbls = new EntitySet<MBProto_sessionTbl>(new Action<MBProto_sessionTbl>(this.attach_MBProto_sessionTbls), new Action<MBProto_sessionTbl>(this.detach_MBProto_sessionTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string family
		{
			get
			{
				return this._family;
			}
			set
			{
				if ((this._family != value))
				{
					this.OnfamilyChanging(value);
					this.SendPropertyChanging();
					this._family = value;
					this.SendPropertyChanged("family");
					this.OnfamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime lastLoginDate
		{
			get
			{
				return this._lastLoginDate;
			}
			set
			{
				if ((this._lastLoginDate != value))
				{
					this.OnlastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._lastLoginDate = value;
					this.SendPropertyChanged("lastLoginDate");
					this.OnlastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regDate", DbType="DateTime NOT NULL")]
		public System.DateTime regDate
		{
			get
			{
				return this._regDate;
			}
			set
			{
				if ((this._regDate != value))
				{
					this.OnregDateChanging(value);
					this.SendPropertyChanging();
					this._regDate = value;
					this.SendPropertyChanged("regDate");
					this.OnregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCode", DbType="Char(6)")]
		public string signCode
		{
			get
			{
				return this._signCode;
			}
			set
			{
				if ((this._signCode != value))
				{
					this.OnsignCodeChanging(value);
					this.SendPropertyChanging();
					this._signCode = value;
					this.SendPropertyChanged("signCode");
					this.OnsignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> signCodeRegDate
		{
			get
			{
				return this._signCodeRegDate;
			}
			set
			{
				if ((this._signCodeRegDate != value))
				{
					this.OnsignCodeRegDateChanging(value);
					this.SendPropertyChanging();
					this._signCodeRegDate = value;
					this.SendPropertyChanged("signCodeRegDate");
					this.OnsignCodeRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet", DbType="Float NOT NULL")]
		public double wallet
		{
			get
			{
				return this._wallet;
			}
			set
			{
				if ((this._wallet != value))
				{
					this.OnwalletChanging(value);
					this.SendPropertyChanging();
					this._wallet = value;
					this.SendPropertyChanged("wallet");
					this.OnwalletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRerty", DbType="TinyInt")]
		public System.Nullable<byte> signCodeRerty
		{
			get
			{
				return this._signCodeRerty;
			}
			set
			{
				if ((this._signCodeRerty != value))
				{
					this.OnsignCodeRertyChanging(value);
					this.SendPropertyChanging();
					this._signCodeRerty = value;
					this.SendPropertyChanged("signCodeRerty");
					this.OnsignCodeRertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTbl_MBProto_sessionTbl", Storage="_MBProto_sessionTbls", ThisKey="ID", OtherKey="customerID")]
		public EntitySet<MBProto_sessionTbl> MBProto_sessionTbls
		{
			get
			{
				return this._MBProto_sessionTbls;
			}
			set
			{
				this._MBProto_sessionTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MBProto_sessionTbls(MBProto_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = this;
		}
		
		private void detach_MBProto_sessionTbls(MBProto_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTbl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTbl")]
	public partial class UserTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _name;
		
		private string _family;
		
		private string _mobile;
		
		private string _password;
		
		private string _image;
		
		private System.DateTime _lastLoginDate;
		
		private System.DateTime _registerDate;
		
		private bool _isManager;
		
		private bool _isOperator;
		
		private bool _isRepairman;
		
		private bool _isDistributor;
		
		private bool _isWarehouseKeeper;
		
		private string _signCode;
		
		private System.Nullable<System.DateTime> _signCodeRegDate;
		
		private byte _status;
		
		private int _repairmanServiceCount;
		
		private int _repairmanScore;
		
		private EntitySet<MBProto_user_sessionTbl> _MBProto_user_sessionTbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnlastLoginDateChanging(System.DateTime value);
    partial void OnlastLoginDateChanged();
    partial void OnregisterDateChanging(System.DateTime value);
    partial void OnregisterDateChanged();
    partial void OnisManagerChanging(bool value);
    partial void OnisManagerChanged();
    partial void OnisOperatorChanging(bool value);
    partial void OnisOperatorChanged();
    partial void OnisRepairmanChanging(bool value);
    partial void OnisRepairmanChanged();
    partial void OnisDistributorChanging(bool value);
    partial void OnisDistributorChanged();
    partial void OnisWarehouseKeeperChanging(bool value);
    partial void OnisWarehouseKeeperChanged();
    partial void OnsignCodeChanging(string value);
    partial void OnsignCodeChanged();
    partial void OnsignCodeRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsignCodeRegDateChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OnrepairmanServiceCountChanging(int value);
    partial void OnrepairmanServiceCountChanged();
    partial void OnrepairmanScoreChanging(int value);
    partial void OnrepairmanScoreChanged();
    #endregion
		
		public UserTbl()
		{
			this._MBProto_user_sessionTbls = new EntitySet<MBProto_user_sessionTbl>(new Action<MBProto_user_sessionTbl>(this.attach_MBProto_user_sessionTbls), new Action<MBProto_user_sessionTbl>(this.detach_MBProto_user_sessionTbls));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_family", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string family
		{
			get
			{
				return this._family;
			}
			set
			{
				if ((this._family != value))
				{
					this.OnfamilyChanging(value);
					this.SendPropertyChanging();
					this._family = value;
					this.SendPropertyChanged("family");
					this.OnfamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime lastLoginDate
		{
			get
			{
				return this._lastLoginDate;
			}
			set
			{
				if ((this._lastLoginDate != value))
				{
					this.OnlastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._lastLoginDate = value;
					this.SendPropertyChanged("lastLoginDate");
					this.OnlastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registerDate", DbType="DateTime NOT NULL")]
		public System.DateTime registerDate
		{
			get
			{
				return this._registerDate;
			}
			set
			{
				if ((this._registerDate != value))
				{
					this.OnregisterDateChanging(value);
					this.SendPropertyChanging();
					this._registerDate = value;
					this.SendPropertyChanged("registerDate");
					this.OnregisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isManager", DbType="Bit NOT NULL")]
		public bool isManager
		{
			get
			{
				return this._isManager;
			}
			set
			{
				if ((this._isManager != value))
				{
					this.OnisManagerChanging(value);
					this.SendPropertyChanging();
					this._isManager = value;
					this.SendPropertyChanged("isManager");
					this.OnisManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOperator", DbType="Bit NOT NULL")]
		public bool isOperator
		{
			get
			{
				return this._isOperator;
			}
			set
			{
				if ((this._isOperator != value))
				{
					this.OnisOperatorChanging(value);
					this.SendPropertyChanging();
					this._isOperator = value;
					this.SendPropertyChanged("isOperator");
					this.OnisOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isRepairman", DbType="Bit NOT NULL")]
		public bool isRepairman
		{
			get
			{
				return this._isRepairman;
			}
			set
			{
				if ((this._isRepairman != value))
				{
					this.OnisRepairmanChanging(value);
					this.SendPropertyChanging();
					this._isRepairman = value;
					this.SendPropertyChanged("isRepairman");
					this.OnisRepairmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDistributor", DbType="Bit NOT NULL")]
		public bool isDistributor
		{
			get
			{
				return this._isDistributor;
			}
			set
			{
				if ((this._isDistributor != value))
				{
					this.OnisDistributorChanging(value);
					this.SendPropertyChanging();
					this._isDistributor = value;
					this.SendPropertyChanged("isDistributor");
					this.OnisDistributorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isWarehouseKeeper", DbType="Bit NOT NULL")]
		public bool isWarehouseKeeper
		{
			get
			{
				return this._isWarehouseKeeper;
			}
			set
			{
				if ((this._isWarehouseKeeper != value))
				{
					this.OnisWarehouseKeeperChanging(value);
					this.SendPropertyChanging();
					this._isWarehouseKeeper = value;
					this.SendPropertyChanged("isWarehouseKeeper");
					this.OnisWarehouseKeeperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCode", DbType="Char(6)")]
		public string signCode
		{
			get
			{
				return this._signCode;
			}
			set
			{
				if ((this._signCode != value))
				{
					this.OnsignCodeChanging(value);
					this.SendPropertyChanging();
					this._signCode = value;
					this.SendPropertyChanged("signCode");
					this.OnsignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signCodeRegDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> signCodeRegDate
		{
			get
			{
				return this._signCodeRegDate;
			}
			set
			{
				if ((this._signCodeRegDate != value))
				{
					this.OnsignCodeRegDateChanging(value);
					this.SendPropertyChanging();
					this._signCodeRegDate = value;
					this.SendPropertyChanged("signCodeRegDate");
					this.OnsignCodeRegDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanServiceCount", DbType="Int NOT NULL")]
		public int repairmanServiceCount
		{
			get
			{
				return this._repairmanServiceCount;
			}
			set
			{
				if ((this._repairmanServiceCount != value))
				{
					this.OnrepairmanServiceCountChanging(value);
					this.SendPropertyChanging();
					this._repairmanServiceCount = value;
					this.SendPropertyChanged("repairmanServiceCount");
					this.OnrepairmanServiceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_repairmanScore", DbType="Int NOT NULL")]
		public int repairmanScore
		{
			get
			{
				return this._repairmanScore;
			}
			set
			{
				if ((this._repairmanScore != value))
				{
					this.OnrepairmanScoreChanging(value);
					this.SendPropertyChanging();
					this._repairmanScore = value;
					this.SendPropertyChanged("repairmanScore");
					this.OnrepairmanScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTbl_MBProto_user_sessionTbl", Storage="_MBProto_user_sessionTbls", ThisKey="ID", OtherKey="userID")]
		public EntitySet<MBProto_user_sessionTbl> MBProto_user_sessionTbls
		{
			get
			{
				return this._MBProto_user_sessionTbls;
			}
			set
			{
				this._MBProto_user_sessionTbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MBProto_user_sessionTbls(MBProto_user_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = this;
		}
		
		private void detach_MBProto_user_sessionTbls(MBProto_user_sessionTbl entity)
		{
			this.SendPropertyChanging();
			entity.UserTbl = null;
		}
	}
}
#pragma warning restore 1591
